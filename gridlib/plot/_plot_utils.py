"""
Module with utility functions required for the plotting.
"""
from typing import Dict

import matplotlib.pyplot as plt
import numpy as np
from matplotlib.colors import ListedColormap

from .. import data_utils


def _fmt_t_str_plot(t_str):
    """Function returns a formatted string which can be plotted inside figures."""
    t_s, d_places = data_utils.get_time_sec(t_str, return_num_decimals=True)
    return rf"${t_s:.{d_places}f}\,\mathrm{{s}}$"


def _get_key_to_value_i(i: int, key_to_value: Dict):
    """Function gets the key_to_value at position i.

    Parameters
    ----------
    i: int
        Index from which to take the key_to_value.
    key_to_value: Dict
        Dictionary with keys and values, which can either be sequences or a single value

    Example
    -------
    >>> key_to_value = {"color": ["r", "b", "g"], "linestyle": ["-", "--", "-."],
                        "linewidth": 1}
    >>> _get_key_to_value_i(1, key_to_value)
    {"color": "b", "linestyle": "--", "linewidth": 1}
    """

    # Check the length of the values
    # They can be either 1 or one other value, for example either 1 or 3, but it cannot
    # be 1, 3 and 5
    value_len = set()
    for key, value in key_to_value.items():
        if hasattr(value, "__len__"):
            value_len.add(len(value))
        else:
            value_len.add(1)

    if len(value_len) > 2:
        raise ValueError(
            f"`key_to_value` is not valid, it contains {len(value_len)} "
            "different sequence lengths."
        )

    key_to_value_i = dict()
    for key, value in key_to_value.items():
        if hasattr(value, "__len__"):
            if len(value) > 1:
                key_to_value_i[key] = value[i]
            else:
                key_to_value_i[key] = value[0]
        else:
            key_to_value_i[key] = value

    return key_to_value_i


def _default_colors():
    return plt.rcParams["axes.prop_cycle"].by_key()["color"]


def _gridlib_colors():
    return ["#fe9901", "#63cabc", "#382134", "#007972", "#2333be", "#aaaaaa"]


def _gridlib_cm():
    "Colors for the default GRIDLib colors."
    # Colormap colors
    c = [
        [255, 255, 255],
        [254, 254, 254],
        [253, 254, 254],
        [252, 253, 253],
        [251, 253, 253],
        [250, 252, 252],
        [249, 252, 252],
        [248, 251, 251],
        [247, 251, 251],
        [246, 250, 250],
        [245, 250, 250],
        [244, 249, 249],
        [243, 249, 248],
        [242, 248, 248],
        [241, 248, 247],
        [240, 247, 247],
        [239, 247, 246],
        [238, 246, 246],
        [237, 246, 245],
        [236, 245, 245],
        [235, 245, 244],
        [234, 244, 244],
        [233, 244, 243],
        [232, 243, 242],
        [231, 243, 242],
        [230, 242, 241],
        [229, 242, 241],
        [228, 241, 240],
        [227, 241, 240],
        [226, 240, 239],
        [225, 240, 239],
        [224, 239, 238],
        [223, 239, 238],
        [222, 238, 237],
        [221, 238, 236],
        [220, 237, 236],
        [219, 237, 235],
        [218, 236, 235],
        [217, 236, 234],
        [216, 235, 234],
        [215, 235, 233],
        [214, 234, 233],
        [213, 234, 232],
        [212, 233, 232],
        [211, 233, 231],
        [210, 232, 230],
        [209, 232, 230],
        [208, 231, 229],
        [207, 231, 229],
        [206, 230, 228],
        [205, 230, 228],
        [204, 229, 227],
        [203, 229, 227],
        [202, 228, 226],
        [201, 228, 226],
        [200, 227, 225],
        [199, 226, 224],
        [198, 226, 224],
        [197, 225, 223],
        [196, 225, 223],
        [195, 224, 222],
        [194, 224, 222],
        [193, 223, 221],
        [192, 223, 221],
        [191, 222, 220],
        [190, 222, 220],
        [189, 221, 219],
        [188, 221, 218],
        [187, 220, 218],
        [186, 220, 217],
        [185, 219, 217],
        [184, 219, 216],
        [183, 218, 216],
        [182, 218, 215],
        [181, 217, 215],
        [180, 217, 214],
        [179, 216, 213],
        [178, 215, 213],
        [177, 215, 212],
        [176, 214, 212],
        [175, 214, 211],
        [174, 213, 211],
        [173, 213, 210],
        [172, 212, 209],
        [171, 212, 209],
        [170, 211, 208],
        [169, 211, 208],
        [168, 210, 207],
        [167, 210, 207],
        [166, 209, 206],
        [165, 209, 206],
        [164, 208, 205],
        [163, 207, 204],
        [162, 207, 204],
        [161, 206, 203],
        [160, 206, 203],
        [159, 205, 202],
        [158, 205, 202],
        [157, 204, 201],
        [156, 204, 201],
        [155, 203, 200],
        [154, 203, 199],
        [153, 202, 199],
        [152, 202, 198],
        [151, 201, 198],
        [150, 201, 197],
        [149, 200, 197],
        [148, 199, 196],
        [147, 199, 196],
        [146, 198, 195],
        [145, 198, 194],
        [144, 197, 194],
        [143, 197, 193],
        [142, 196, 193],
        [141, 196, 192],
        [140, 195, 192],
        [139, 195, 191],
        [138, 194, 191],
        [137, 194, 190],
        [136, 193, 189],
        [135, 193, 189],
        [134, 192, 188],
        [133, 191, 188],
        [132, 191, 187],
        [131, 190, 187],
        [130, 190, 186],
        [129, 189, 186],
        [128, 189, 185],
        [127, 188, 184],
        [126, 188, 184],
        [125, 187, 183],
        [124, 187, 183],
        [123, 186, 182],
        [122, 186, 182],
        [121, 185, 181],
        [120, 185, 181],
        [119, 184, 180],
        [118, 184, 179],
        [117, 183, 179],
        [116, 183, 178],
        [115, 182, 178],
        [114, 182, 177],
        [113, 181, 177],
        [112, 180, 176],
        [111, 180, 175],
        [110, 179, 175],
        [109, 179, 174],
        [108, 178, 174],
        [107, 178, 173],
        [106, 177, 173],
        [105, 177, 172],
        [104, 176, 172],
        [103, 176, 171],
        [102, 175, 170],
        [101, 175, 170],
        [100, 174, 169],
        [98, 174, 169],
        [97, 173, 168],
        [96, 173, 168],
        [95, 172, 167],
        [94, 172, 167],
        [93, 171, 166],
        [92, 171, 165],
        [91, 170, 165],
        [90, 170, 164],
        [89, 169, 164],
        [88, 168, 163],
        [87, 168, 163],
        [86, 167, 162],
        [85, 167, 162],
        [84, 166, 161],
        [83, 166, 160],
        [82, 165, 160],
        [81, 165, 159],
        [80, 164, 159],
        [79, 164, 158],
        [78, 163, 158],
        [77, 163, 157],
        [76, 162, 157],
        [75, 162, 156],
        [74, 161, 155],
        [73, 161, 155],
        [72, 160, 154],
        [71, 160, 154],
        [70, 159, 153],
        [69, 159, 153],
        [68, 158, 152],
        [67, 158, 152],
        [66, 157, 151],
        [65, 156, 150],
        [64, 156, 150],
        [63, 155, 149],
        [62, 155, 149],
        [61, 154, 148],
        [60, 154, 148],
        [59, 153, 147],
        [58, 153, 146],
        [57, 152, 146],
        [56, 152, 145],
        [55, 151, 145],
        [54, 151, 144],
        [53, 150, 144],
        [52, 149, 143],
        [51, 149, 143],
        [50, 148, 142],
        [49, 148, 141],
        [48, 147, 141],
        [47, 147, 140],
        [46, 146, 140],
        [45, 146, 139],
        [44, 145, 139],
        [43, 145, 138],
        [42, 144, 138],
        [41, 143, 137],
        [40, 143, 136],
        [39, 142, 136],
        [38, 142, 135],
        [37, 141, 135],
        [36, 141, 134],
        [35, 140, 134],
        [34, 140, 133],
        [33, 139, 133],
        [32, 139, 132],
        [31, 138, 131],
        [30, 137, 131],
        [29, 137, 130],
        [28, 136, 130],
        [27, 136, 129],
        [27, 135, 129],
        [26, 135, 128],
        [25, 134, 128],
        [24, 134, 127],
        [23, 133, 126],
        [22, 133, 126],
        [21, 132, 125],
        [20, 131, 125],
        [19, 131, 124],
        [18, 130, 124],
        [17, 130, 123],
        [16, 129, 123],
        [15, 129, 122],
        [14, 128, 121],
        [13, 128, 121],
        [12, 127, 120],
        [11, 127, 120],
        [10, 126, 119],
        [9, 125, 119],
        [8, 125, 118],
        [7, 124, 117],
        [6, 124, 117],
        [5, 123, 116],
        [4, 123, 116],
        [3, 122, 115],
        [2, 122, 115],
        [1, 121, 114],
        [0, 121, 114],
    ]

    # Convert list to array
    c = np.array(c, dtype=np.float64)
    cm = ListedColormap(c / 255.0)

    return cm
